x-docker-environment: &docker-environment
  HISTFILE: /data/.shell_history
  RAILS_LOG_TO_STDOUT: true
  SOME: x

services:
  dev: &app
    image: app:development
    environment:
      <<: *docker-environment
    build:
      context: .
      target: development
    env_file:
      - .env
    stdin_open: true
    ports:
      - ${PORT:-3000}:${PORT:-3000}
    tmpfs:
      - /app/tmp/pids
    profiles:
      - dev
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app:c
      - cache:/app/tmp/cache:d
      - data:/data:d
      - bundle:/usr/local/bundle:d
      - node_modules:/app/node_modules:d
    command: bin/start

  prod:
    <<: *app
    image: app-name:production
    environment:
      RAILS_ENV: production
      RACK_ENV: production
    profiles:
      - prod
    healthcheck:
      test: ["CMD", "curl", "http://prod:3000/health"]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 20s
    deploy:
      mode: replicated
      replicas: 2
      endpoint_mode: vip
      update_config:
        parallelism: 1
        order: start-first
        delay: 5s
        failure_action: rollback
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s
    volumes:
      - cache:/app/tmp/cache:d

  sidekiq:
    image: app-name:development
    environment:
      <<: *docker-environment
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy    
      postgres:
        condition: service_healthy
    volumes:
      - .:/app:c
      - cache:/app/tmp/cache:d
      - bundle:/usr/local/bundle:d
      - data:/data:d
    command: bundle exec sidekiq -C config/sidekiq.yml

  mailcatcher:
    image: dockage/mailcatcher
    profiles:
      - dev
    restart: on-failure:10
    ports:
      - ${MAILCATCHER_PORT:-1080}:1080

  reproxy:
    image: umputun/reproxy
    profiles:
      - prod
    ports:
      - 80:8080
      - 443:8443
    environment:
      SSL_TYPE: auto
      SSL_ACME_FQDN: domain.com
      SSL_ACME_LOCATION: /srv/var/acme
      SSL_ACME_EMAIL: mail@example.com
      FILE_ENABLED: true
      # DEBUG: true
    volumes:
      - ./config/reproxy.conf:/srv/reproxy.yml
      - certs:/srv/var/acme

volumes:
  postgres:
  redis:
  bundle:
  node_modules:
  data:
  cache: